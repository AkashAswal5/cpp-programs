/*       Intersection of Arrays with Distinct
Examples:

Input: a[] = [89, 24, 75, 11, 23], b[] = [89, 2, 4]
Output: 1
Explanation: 89 is the only element in the intersection of two arrays.

Input: a[] = [1, 2, 4, 3, 5, 6], b[] = [3, 4, 5, 6, 7]
Output: 4
Explanation: 3, 4, 5, and 6 are the elements in the intersection of two arrays.

Input: a[] = [20, 10, 30, 50, 40], b[] = [15, 25, 30, 20, 35]
Output: 2
Explanation: 20 and 30 are the elements in the intersection of the two arrays.
*/

#include <bits/stdc++.h>
#include <iostream>
// #include <unordered_map>

using namespace std;

int findintersection(vector<int> &a, vector<int> &b)
{
    unordered_set<int> s;
    for (int i = 0; i < a.size(); i++)
    {
        s.insert(a[i]);
    }

    int count = 0;
    for (int i = 0; i < b.size(); i++)
    {
        int key = b[i];
        if (s.find(key) != s.end())
        {
            count++;
            s.erase(key);
        }
    }
    return count;
}

int main()
{
    vector<int> a, b;
    a = {20, 10, 30, 50, 40};
    b = {15, 25, 30, 20, 35};

    cout << findintersection(a, b);

    return 0;
}
